// <auto-generated />
using System;
using Demo.HR.Models.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Demo.HR.Models.Db.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200529151422_SeedInitialData")]
    partial class SeedInitialData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4");

            modelBuilder.Entity("Demo.HR.Models.Db.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2020, 5, 29, 18, 14, 22, 488, DateTimeKind.Local).AddTicks(114),
                            IsActive = true,
                            Name = "Demo Project 1"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2020, 5, 29, 18, 14, 22, 491, DateTimeKind.Local).AddTicks(2267),
                            IsActive = true,
                            Name = "Demo Project 2"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2020, 5, 29, 18, 14, 22, 491, DateTimeKind.Local).AddTicks(2317),
                            IsActive = true,
                            Name = "Demo Project 3"
                        });
                });

            modelBuilder.Entity("Demo.HR.Models.Db.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2020, 5, 29, 18, 14, 22, 493, DateTimeKind.Local).AddTicks(4072),
                            IsActive = true,
                            Name = "Demo Role 1"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2020, 5, 29, 18, 14, 22, 493, DateTimeKind.Local).AddTicks(4102),
                            IsActive = true,
                            Name = "Demo Role 2"
                        });
                });

            modelBuilder.Entity("Demo.HR.Models.Db.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<string>("Skills")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2020, 5, 29, 18, 14, 22, 496, DateTimeKind.Local).AddTicks(1403),
                            Email = "demo1@test.com",
                            FullName = "Demo User 1",
                            IsActive = true
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2020, 5, 29, 18, 14, 22, 496, DateTimeKind.Local).AddTicks(1480),
                            Email = "demo2@test.com",
                            FullName = "Demo User 2",
                            IsActive = true
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2020, 5, 29, 18, 14, 22, 496, DateTimeKind.Local).AddTicks(1486),
                            Email = "demo3@test.com",
                            FullName = "Demo User 3",
                            IsActive = true
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2020, 5, 29, 18, 14, 22, 496, DateTimeKind.Local).AddTicks(1492),
                            Email = "demo4@test.com",
                            FullName = "Demo User 4",
                            IsActive = true
                        });
                });

            modelBuilder.Entity("Demo.HR.Models.Db.UserAllocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte>("ActualHours")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("ContractedHours")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ContractedHoursApproved")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProjectId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAllocations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActualHours = (byte)20,
                            ContractedHours = (byte)32,
                            ContractedHoursApproved = true,
                            CreatedAt = new DateTime(2020, 5, 29, 18, 14, 22, 503, DateTimeKind.Local).AddTicks(79),
                            EndDate = new DateTime(2019, 5, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ProjectId = 1,
                            RoleId = 1,
                            StartDate = new DateTime(2019, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Demo.HR.Models.Db.UserProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProjectId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("UserProjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2020, 5, 29, 18, 14, 22, 504, DateTimeKind.Local).AddTicks(6118),
                            IsActive = true,
                            ProjectId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2020, 5, 29, 18, 14, 22, 504, DateTimeKind.Local).AddTicks(6206),
                            IsActive = true,
                            ProjectId = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2020, 5, 29, 18, 14, 22, 504, DateTimeKind.Local).AddTicks(6212),
                            IsActive = true,
                            ProjectId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2020, 5, 29, 18, 14, 22, 504, DateTimeKind.Local).AddTicks(6216),
                            IsActive = true,
                            ProjectId = 3,
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2020, 5, 29, 18, 14, 22, 504, DateTimeKind.Local).AddTicks(6221),
                            IsActive = true,
                            ProjectId = 3,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("Demo.HR.Models.Db.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2020, 5, 29, 18, 14, 22, 506, DateTimeKind.Local).AddTicks(2297),
                            IsActive = true,
                            RoleId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2020, 5, 29, 18, 14, 22, 506, DateTimeKind.Local).AddTicks(2369),
                            IsActive = true,
                            RoleId = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2020, 5, 29, 18, 14, 22, 506, DateTimeKind.Local).AddTicks(2375),
                            IsActive = true,
                            RoleId = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2020, 5, 29, 18, 14, 22, 506, DateTimeKind.Local).AddTicks(2379),
                            IsActive = true,
                            RoleId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2020, 5, 29, 18, 14, 22, 506, DateTimeKind.Local).AddTicks(2383),
                            IsActive = true,
                            RoleId = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2020, 5, 29, 18, 14, 22, 506, DateTimeKind.Local).AddTicks(2387),
                            IsActive = true,
                            RoleId = 2,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("Demo.HR.Models.Db.UserAllocation", b =>
                {
                    b.HasOne("Demo.HR.Models.Db.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Demo.HR.Models.Db.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Demo.HR.Models.Db.User", "User")
                        .WithMany("UserAllocations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Demo.HR.Models.Db.UserProject", b =>
                {
                    b.HasOne("Demo.HR.Models.Db.Project", "Project")
                        .WithMany("UserProjects")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Demo.HR.Models.Db.User", "User")
                        .WithMany("UserProjects")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Demo.HR.Models.Db.UserRole", b =>
                {
                    b.HasOne("Demo.HR.Models.Db.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Demo.HR.Models.Db.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
